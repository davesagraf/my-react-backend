// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  description   String?  @db.VarChar(255)
  author    User     @relation(fields: [user_id], references: [id])
  user_id   Int
  user_name String?      
  comments Comment[]
  likes    Like[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [user_id], references: [id])
  user_id   Int
  user_name String?      
  post      Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id   Int      
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  author    User     @relation(fields: [user_id], references: [id])
  user_id   Int
  user_name String?       
  post      Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id   Int
  likes     commentLike[]     
}

model commentLike {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [user_id], references: [id])
  user_id   Int
  user_name String?      
  comment      Comment     @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  comment_id   Int      
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  password String  @unique
  first_name    String?
  last_name    String?
  posts   Post[]
  comments Comment[]
  likes Like[]
  commentLikes commentLike[]
}